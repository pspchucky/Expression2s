@name Bitcoin Cracker
@inputs 
@outputs 
@persist Pre:string [Keys Long]:array A
@trigger 
runOnTick(1)
if(first()){
timer("gen",0)   
timer("benchmark",5000)
}

#[
    0000000000000000 12146a63a98ba1ebcb9cdf0c02e01004bb8e272fe786bb6d #27 numbers | 21 Char
    0000000000000000 1bb2ce38aa9316c8475545d822af011cd734e996564a01de #32 numbers | 16 char
    0000000000000000 1f56a9a088c024e559e98f60e1ee4053d1fef16efa4d2d50 #29 numbers | 19 char
    0000000000000000 076a3dd21d126f8ccfd53767eece7422f0c39f2977505599 #hmm
    0000000000000000 2ef64f259b61aa71cc1a074699b2d976b113da4367a56bd5
    0000000000000000 3303923d46f7ccaa42b4e4a1427865d0413b746cb2fd27d6
    I see a 0-9 and abcdef
]#
Pre = "0000000000000000"
#Must guess 48 alpha-numeric chars
Num = array("a","b","c","d","e","f","0","1","2","3","4","5","6","7","8","9")
Long = array()
if(clk("gen")){
for(J=1,3){
for(I=1,16){
Long:pushString(Num[randint(1,16),string])   
}
}
#print(Long:concat())
Keys:pushString(Pre+Long:concat())
Long:clear()
timer("gen",0)
}
if(clk("benchmark")){
stoptimer("gen")
timer("k",1500)
}
if(clk("k")){
print("Generated " + Keys:count() + " hashes.")   
#[
for(I=1,Keys:count()){
print(Keys[I,string])   
}]#
}
